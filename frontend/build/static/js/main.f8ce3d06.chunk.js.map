{"version":3,"sources":["global/Navbar.js","dashboard/ProgressBarComponent.js","global/URL.js","dashboard/StockTable.js","dashboard/FavoriteCard.js","dashboard/SubNavbar.js","dashboard/DashboardChart.js","dashboard/Dashboard.js","wallet/InfoCard.js","wallet/WalletTable.js","wallet/TransactionsTable.js","wallet/WalletAllocationChart.js","wallet/WalletYield.js","wallet/Wallet.js","stockdetail/StockDetailComponent.js","addstock/AddStockComponent.js","query/QueryComponent.js","bvsp/IbovespaComponent.js","App.js","index.js"],"names":["withRouter","pathname","location","Navbar","bg","expand","variant","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","Link","active","includes","ProgressBarComponent","props","Row","ProgressBar","animated","now","loadingProgress","style","width","label","Math","round","baseURL","StockTable","state","isLoading","stocks","stocksId","favoriteHandler","bind","deleteHandler","e","axios","delete","params","pk","target","getAttribute","then","resp","status","alert","document","reload","persist","classList","contains","replace","firstChild","data","put","parseInt","console","log","this","setState","get","itemsProcessed","favorite","forEach","stock","push","index","array","updated_stock","length","content","Table","size","striped","responsive","map","colorClass","price","toLocaleString","currency","change","change_percent","key","fontSize","symbol","to","Button","onClick","stockid","toString","Component","FavoriteCard","Container","Col","sm","Card","Body","padding","name","substr","SubNavbar","indexes","country","data2","forexes","itemsProcessed2","data1","item","object","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","breakpoint","text","Badge","pill","toFixed","DashboardChart","series","options","chart","type","height","plotOptions","bar","colors","ranges","from","color","columnWidth","dataLabels","enabled","yaxis","title","labels","formatter","y","show","xaxis","ser","lab","React","DashboardComponent","fluid","Header","InfoCard","percentageValue","toUpperCase","description","descriptionValue","value","percentage","WalletTable","useState","ModalEdit","setModalEdit","ModalAdd","setModalAdd","Stock","setStock","Amount","setAmount","Investment","setInvestment","Broker","setBroker","EditId","setEditId","BuyDate","setBuyDate","useEffect","handleStockAmountChange","handleInvestmentChange","parseFloat","toggleModalAdd","toggleModalEdit","deleteWalletItem","find","o","window","confirm","cb","money_amount","investment","cursor","broker","owner","buy_price","stock_amount","isOpen","toggle","md","onSubmit","preventDefault","post","buy_date","catch","err","icon","group","onChange","required","error","success","Form","Group","controlId","Control","as","custom","defaultValue","disabled","TransactionsTable","deleteTransactionItem","submitTransactionItem","uploadData","FormData","append","Operation","Date","Document","Data","operation","date","fontWeight","download","encType","File","files","WalletAllocationChart","animations","easing","animateGradually","delay","dynamicAnimation","align","fontFamily","pie","donut","val","amount","legend","position","WalletYield","horizontal","offsetX","stroke","ser1","ser2","ibovespa_change","WalletComponent","handleOwnerChange","Owner","Loading","higher","max","apply","obj","min","object2","reduce","sum","currentValue","Wallet","TotalAmount","TotalInvestment","TotalChangePct","MaxStockChange","MinStockChange","noData","walletChangeCallback","msg","submitWalletItem","stockAmount","stockAmout","updateRun","stockData","spinner","Spinner","animation","role","noDataContent","notChosen","toLowerCase","Label","Tab","defaultActiveKey","Item","eventKey","Content","Pane","lg","xs","StockDetailComponent","Indicators","undefined","Dataset2","Dataset","Price","Options","Series","Options2","indicators","dataset","dates","closePrices","buy","sell","neutral","match","indicator","momentum","signal","ema_signal","historical","close","unshift","x","open","high","low","tooltip","resistances","supports","xl","AddStockComponent","setSymbol","isETF","setETF","isFund","setFund","is_etf","is_fund","Check","checked","QueryComponent","loadedContent","loadingContent","handleSubmit","handleSymbolChange","toLocaleUpperCase","content2","IbovespaComponent","App","exact","path","component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f8ce3d06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport \"./Navbar.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction TopBar({ location }) {\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand className=\"\" href=\"/\">\r\n        <span>RM</span> INVESTIMENTOS\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/\"\r\n            active={pathname === \"/\"}\r\n          >\r\n            DASHBOARD\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/wallet\"\r\n            active={pathname.includes(\"/wallet\")}\r\n          >\r\n            CARTEIRA\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/addStock\"\r\n            active={pathname.includes(\"/addStock\")}\r\n          >\r\n            ADICIONAR AÇÃO\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/query\"\r\n            active={pathname.includes(\"/query\")}\r\n          >\r\n            CONSULTA\r\n          </Nav.Link>\r\n          {/* <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/forex\"\r\n            active={pathname.includes(\"/forex\")}\r\n          >\r\n            CÂMBIO\r\n          </Nav.Link> */}\r\n          <Nav.Link\r\n            className=\"navbar-link-item\"\r\n            href=\"/bvsp\"\r\n            active={pathname.includes(\"/bvsp\")}\r\n          >\r\n            IBOVESPA\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default withRouter(TopBar);\r\n","import React from \"react\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst ProgressBarComponent = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ProgressBar\r\n          animated\r\n          variant=\"dark\"\r\n          now={props.loadingProgress}\r\n          style={{ width: \"100%\" }}\r\n          label={`${Math.round(props.loadingProgress)}%`}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBarComponent;\r\n","const baseURL = \"https://rminvestimentos.herokuapp.com\";\r\n// const baseURL = \"http://localhost:8000\";\r\n\r\nexport { baseURL };\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass StockTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n  }\r\n\r\n  deleteHandler(e) {\r\n    axios\r\n      .delete(`${baseURL}/api/stock/`, {\r\n        params: {\r\n          pk: e.target.getAttribute(\"stockid\"),\r\n        },\r\n      })\r\n      .then((resp) => {\r\n        resp.status === 201\r\n          ? alert(\"Ativo deletado com sucesso\")\r\n          : alert(\"Ops, houve algum erro\");\r\n\r\n        return resp.status;\r\n      })\r\n      .then((status) => {\r\n        document.location.reload(status === 201);\r\n      });\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(`${baseURL}/api/stock/`, {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(`${baseURL}/api/stock/`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        } else {\r\n          data.forEach((stock) => {\r\n            if (!stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n              // console.log(stock);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          // console.log(id);\r\n          axios\r\n            .get(`${baseURL}/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              // console.log(stock);\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.isLoading ? (\r\n      <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n    ) : (\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th style={{ width: \"20%\" }}>Ativo</th>\r\n            <th style={{ width: \"20%\" }}>Preço</th>\r\n            <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n            <th style={{ width: \"20%\" }}>Variação(R$)</th>\r\n            <th style={{ width: \"10%\" }}></th>\r\n            <th style={{ width: \"5%\" }}></th>\r\n            <th style={{ width: \"5%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.stocks.map((stock) => {\r\n            let price = stock.price.toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n            let change = (\r\n              stock.price *\r\n              (stock.change_percent / 100)\r\n            ).toLocaleString(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            });\r\n\r\n            let colorClass;\r\n            stock.change_percent > 0\r\n              ? (colorClass = \"success\")\r\n              : (colorClass = \"danger\");\r\n\r\n            return (\r\n              <tr className=\"text-center\" key={stock.pk}>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {stock.symbol}\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }} className=\"align-middle\">\r\n                  {price}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span\r\n                    style={{ fontSize: \"15px\" }}\r\n                    className={`badge-${colorClass} badge-pill align-middle`}\r\n                  >\r\n                    {stock.change_percent}%\r\n                  </span>\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className={`align-middle`}>\r\n                  {change}\r\n                </td>\r\n                <td style={{ fontSize: \"15px\" }} className=\"align-middle\">\r\n                  <Link to={`/stock/${stock.pk}`}>\r\n                    <Button size=\"sm\" variant=\"outline-info\">\r\n                      Gráfico\r\n                    </Button>\r\n                  </Link>\r\n                </td>\r\n                <td style={{ fontSize: \"18px\" }}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    onClick={this.favoriteHandler}\r\n                    size=\"sm\"\r\n                    stockid={stock.pk.toString()}\r\n                    variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                  >\r\n                    {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                  </Button>\r\n                </td>\r\n                <td stockid={stock.pk.toString()} style={{ fontSize: \"18px\" }}>\r\n                  <Button\r\n                    className=\"float-left\"\r\n                    onClick={this.deleteHandler}\r\n                    size=\"sm\"\r\n                    stockid={stock.pk.toString()}\r\n                    variant=\"outline-danger\"\r\n                  >\r\n                    <i\r\n                      stockid={stock.pk.toString()}\r\n                      className=\"fas fa-times\"\r\n                    ></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default StockTable;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport ProgressBarComponent from \"./ProgressBarComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StockTable.css\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\n// Função que atualiza as informações do ativo dado um ID\r\n\r\nclass FavoriteCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // creating States\r\n    this.state = {\r\n      isLoading: true,\r\n      stocks: [],\r\n      loadingProgress: 0,\r\n      stocksId: [],\r\n    };\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n    this.favoriteHandler = this.favoriteHandler.bind(this);\r\n  }\r\n\r\n  favoriteHandler(e) {\r\n    e.persist();\r\n\r\n    if (e.target.classList.contains(\"btn-outline-info\")) {\r\n      e.target.classList.replace(\"btn-outline-info\", \"btn-info\");\r\n      e.target.firstChild.data = \"Favoritar\";\r\n    } else {\r\n      e.target.classList.replace(\"btn-info\", \"btn-outline-info\");\r\n      e.target.firstChild.data = \"Desfavoritar\";\r\n    }\r\n    axios\r\n      .put(`${baseURL}/api/stock/`, {\r\n        pk: parseInt(e.target.getAttribute(\"stockid\")),\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n\r\n  deleteHandler(e) {\r\n    axios\r\n      .delete(`${baseURL}/api/stock/`, {\r\n        params: {\r\n          pk: e.target.getAttribute(\"id\"),\r\n        },\r\n      })\r\n      .then((resp) => {\r\n        resp.status === 201\r\n          ? alert(\"Ativo deletado com sucesso\")\r\n          : alert(\"Ops, houve algum erro\");\r\n\r\n        return resp.status;\r\n      })\r\n      .then((status) => {\r\n        document.location.reload(status === 201);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    axios\r\n      .get(`${baseURL}/api/stock/`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        var itemsProcessed = 0;\r\n        var stocksId = [];\r\n        var stocks = [];\r\n\r\n        if (this.props.favorite) {\r\n          // CASO EM QUE QUEREMOS A TABELA DOS FAVORITOS\r\n          data.forEach((stock) => {\r\n            if (stock.favorite) {\r\n              stocksId.push(stock.pk);\r\n            }\r\n          });\r\n        }\r\n        stocksId.forEach((id, index, array) => {\r\n          axios\r\n            .get(`${baseURL}/api/stock/update/${id}`)\r\n            .then((resp) => resp.data.updated_stock)\r\n            .then((stock) => {\r\n              itemsProcessed++;\r\n              stocks.push(stock);\r\n              this.setState({\r\n                loadingProgress: (100 * itemsProcessed) / array.length,\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (itemsProcessed === array.length) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                  stocks: stocks,\r\n                });\r\n              }\r\n            });\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // const size = this.props.favorite ? \"xl\" : \"sm\";\r\n    const content = this.state.isLoading ? (\r\n      // <Row className=\"mt-2\">\r\n      <Container>\r\n        <Col style={{ width: \"100%\" }} sm={12}>\r\n          <ProgressBarComponent loadingProgress={this.state.loadingProgress} />\r\n        </Col>\r\n      </Container>\r\n    ) : // </Row>\r\n    this.state.stocks.length > 0 ? (\r\n      this.state.stocks.map((stock) => {\r\n        let price = stock.price.toLocaleString(\"pt-BR\", {\r\n          style: \"currency\",\r\n          currency: \"BRL\",\r\n        });\r\n        // let change = (\r\n        //   stock.price *\r\n        //   (stock.change_percent / 100)\r\n        // ).toLocaleString(\"pt-BR\", {\r\n        //   style: \"currency\",\r\n        //   currency: \"BRL\",\r\n        // });\r\n\r\n        let colorClass;\r\n        stock.change_percent > 0\r\n          ? (colorClass = \"success\")\r\n          : (colorClass = \"danger\");\r\n\r\n        return (\r\n          <div\r\n            className=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 p-3\"\r\n            key={stock.pk}\r\n          >\r\n            <Card className=\"\">\r\n              <Card.Body style={{ padding: \"5px\" }}>\r\n                <Row>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <div\r\n                          className={`badge bg-info z-depth-4 py-1 px-4 ml-4 mt-n2 rounded`}\r\n                        >\r\n                          <h4 className=\"text-white\">{stock.symbol}</h4>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12} className=\"d-flex justify-content-start\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"outline-info\"\r\n                          id={stock.pk}\r\n                          onClick={this.deleteHandler}\r\n                        >\r\n                          <i className=\"fas fa-times fa-lg\"></i>\r\n                        </Button>\r\n                        <Link className=\"\" to={`/stock/${stock.pk}`}>\r\n                          <Button size=\"sm\" variant=\"outline-info\">\r\n                            <i className=\"fas fa-chart-line fa-lg\"></i>\r\n                          </Button>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <Button\r\n                          className=\"ml-4\"\r\n                          size=\"sm\"\r\n                          onClick={this.favoriteHandler}\r\n                          stockid={stock.pk}\r\n                          variant={stock.favorite ? \"outline-info\" : \"info\"}\r\n                        >\r\n                          {stock.favorite ? \"Desfavoritar\" : \"Favoritar\"}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <p className=\"float-right text-uppercase text-white\">\r\n                          <small>{stock.name.substr(0, 32)}</small>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <p className=\"float-right text-uppercase text-muted\">\r\n                          <small>Cotação</small>\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <h4 className=\"d-flex font-weight-bold float-right text-uppercase text-white\">\r\n                          {price}\r\n                          <span\r\n                            className={`badge badge-pill ml-1 badge-${colorClass}`}\r\n                          >\r\n                            {stock.change_percent}%\r\n                          </span>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div> Você não possui ações favoritas</div>\r\n    );\r\n    return <>{content}</>;\r\n  }\r\n}\r\n\r\nexport default FavoriteCard;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, Badge } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass SubNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      indexes: [\r\n        {\r\n          name: \"Bovespa\",\r\n          country: \"brazil\",\r\n        },\r\n        {\r\n          name: \"S&P 500\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Nasdaq\",\r\n          country: \"united states\",\r\n        },\r\n        {\r\n          name: \"Dow 30\",\r\n          country: \"united states\",\r\n        },\r\n      ],\r\n      data2: [],\r\n      forexes: [\r\n        {\r\n          name: \"USD\",\r\n        },\r\n        {\r\n          name: \"EUR\",\r\n        },\r\n        {\r\n          name: \"GBP\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var itemsProcessed = 0;\r\n    var itemsProcessed2 = 0;\r\n    var data1 = [];\r\n    var data2 = [];\r\n    this.state.indexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(`${baseURL}/api/index/get/`, {\r\n          params: { name: item.name, country: item.country },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed = itemsProcessed + 1;\r\n          // console.log(resp.data.object);\r\n          data1.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed === array.length) {\r\n            this.setState({ data: data1 });\r\n          }\r\n        });\r\n    });\r\n    this.state.forexes.forEach((item, index, array) => {\r\n      axios\r\n        .get(`${baseURL}/api/forex/get/`, {\r\n          params: { name: item.name },\r\n        })\r\n        .then((resp) => {\r\n          itemsProcessed2 = itemsProcessed2 + 1;\r\n          // console.log(resp.data.object);\r\n          data2.push(resp.data.object);\r\n        })\r\n        .then(() => {\r\n          if (itemsProcessed2 === array.length) {\r\n            this.setState({ data2: data2 });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      className: \"mt-2\",\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 1500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 3,\r\n      // autoplay: false,\r\n      autoplaySpeed: 3200,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1600,\r\n          settings: {\r\n            slidesToShow: 3,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 1000,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            autoplaySpeed: 1500,\r\n            speed: 500,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <Slider {...settings}>\r\n        {this.state.data.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"light\"\r\n                text=\"dark\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h5 className=\"float-left\">{object.name}</h5>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h5>\r\n                        {object.price}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n        {this.state.data2.map((object, index) => {\r\n          let colorClass = object.change_percent > 0 ? \"success\" : \"danger\";\r\n          return (\r\n            <Col key={`${index}`}>\r\n              <Card\r\n                bg=\"light\"\r\n                text=\"dark\"\r\n                className=\"z-depth-4 default-color mb-2\"\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                    <h5 className=\"float-left\">{object.name}</h5>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <h5>\r\n                        R$ {object.price.toFixed(3)}\r\n                        <Badge pill variant={colorClass} className=\"ml-2\">\r\n                          {object.change_percent}%\r\n                        </Badge>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass DashboardChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: \"bar\",\r\n          height: 350,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            colors: {\r\n              ranges: [\r\n                {\r\n                  from: -100,\r\n                  to: 0,\r\n                  color: \"#F15B46\",\r\n                },\r\n                {\r\n                  from: 0.00000001,\r\n                  to: 100,\r\n                  color: \"#10a11f\",\r\n                },\r\n              ],\r\n            },\r\n            columnWidth: \"100%\",\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: \"Variação\",\r\n          },\r\n          labels: {\r\n            formatter: function (y) {\r\n              return y.toFixed(2) + \"%\";\r\n            },\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${baseURL}/api/stock/`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        let ser = [];\r\n        let lab = [];\r\n        data.forEach((stock, index) => {\r\n          ser.push(stock.change_percent);\r\n          lab.push(stock.symbol);\r\n        });\r\n        this.setState({\r\n          series: [{ name: \"Variação\", data: ser }],\r\n          options: {\r\n            labels: lab,\r\n          },\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          series={this.state.series}\r\n          options={this.state.options}\r\n          type=\"bar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardChart;\r\n","import React, { Component } from \"react\";\r\nimport StockTable from \"./StockTable\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport SubNavbar from \"./SubNavbar\";\r\nimport DashboardChart from \"./DashboardChart\";\r\n\r\n// Grid Layout\r\nimport { Container, Row, Col, Card } from \"react-bootstrap/\";\r\n\r\nclass DashboardComponent extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container fluid className=\"px-4\">\r\n          <SubNavbar />\r\n        </Container>\r\n        <Row className=\"mt-4\">\r\n          {/* <Card style={{ width: \"100vw\" }}>\r\n                <Card.Header>\r\n                  <h3>Seus Favoritos</h3>\r\n                </Card.Header>\r\n                <Card.Body> */}\r\n          <FavoriteCard favorite={true} />\r\n          {/* </Card.Body>\r\n              </Card> */}\r\n        </Row>\r\n        <Row className=\"mt-4\">\r\n          <Col sm={5} className=\"\">\r\n            <Card className=\"mt-2\" bg=\"light\" text=\"dark\">\r\n              <Card.Header>\r\n                <h3>Outras ações</h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <StockTable favorite={false} />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col sm={7}>\r\n            <Card className=\"mt-2\" bg=\"light\" text=\"dark\">\r\n              <DashboardChart />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import React from \"react\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\n\r\nconst InfoCard = (props) => {\r\n  const colorClass = props.percentageValue > 0 ? \"success\" : \"danger\";\r\n\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\" className=\"z-depth-2 my-3\">\r\n      <div className=\"\">\r\n        <span\r\n          className=\"px-2 ml-3 py-2 mt-n3 rounded unique-color\"\r\n          style={{ fontSize: \"20px\", color: \"white\" }}\r\n        >\r\n          {props.title.toUpperCase()}\r\n        </span>\r\n        <div className=\"float-right text-right p-3\">\r\n          <p className=\"text-uppercase mb-1\">\r\n            {/* <small> */}\r\n            {props.description} {props.descriptionValue}\r\n            {/* </small> */}\r\n          </p>\r\n          <h4 className=\"font-weight-bold mb-0\">\r\n            {props.value}\r\n            <Badge pill className={`ml-1 badge-${colorClass}`}>\r\n              {props.percentage}\r\n            </Badge>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`card-body badge-${colorClass} m-2 mb-n2 rounded pt-0`}\r\n      ></div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React, { Fragment } from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nconst WalletTable = (props) => {\r\n  const [ModalEdit, setModalEdit] = React.useState(false);\r\n  const [ModalAdd, setModalAdd] = React.useState(false);\r\n  const [Stock, setStock] = React.useState(\"\");\r\n  const [Amount, setAmount] = React.useState(0);\r\n  const [Investment, setInvestment] = React.useState(0);\r\n  const [Broker, setBroker] = React.useState(\"\");\r\n  const [EditId, setEditId] = React.useState(0);\r\n  const [BuyDate, setBuyDate] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {}, []);\r\n  const handleStockAmountChange = (e) => {\r\n    setAmount(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    setStock(e.target.value.toUpperCase());\r\n  };\r\n\r\n  const handleInvestmentChange = (e) => {\r\n    setInvestment(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleBrokerChange = (e) => {\r\n    setBroker(e.target.value);\r\n  };\r\n\r\n  const toggleModalAdd = () => {\r\n    setModalAdd(!ModalAdd);\r\n  };\r\n\r\n  const toggleModalEdit = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    // var obj = props.data.find(function (o) {\r\n    //   return o.pk === id;\r\n    // });\r\n    setEditId(id);\r\n    setModalEdit(!ModalEdit);\r\n    // ModalEdit ? console.log(\"closed\") : console.log(\"opened\");\r\n  };\r\n\r\n  const deleteWalletItem = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"id\"));\r\n    var object = props.data.find(function (o) {\r\n      return o.pk === id;\r\n    });\r\n    window.confirm(\r\n      `Deseja mesmo excluir o item ${object.stock.name} (${object.stock.symbol}) da sua carteira?`\r\n    )\r\n      ? axios\r\n          .delete(`${baseURL}/api/wallet/`, {\r\n            params: {\r\n              pk: e.target.getAttribute(\"id\"),\r\n            },\r\n          })\r\n          .then((resp) => {\r\n            resp.status === 201\r\n              ? alert(\"Ativo deletado com sucesso\")\r\n              : alert(\"Ops, houve algum erro\");\r\n          })\r\n          .then(() => {\r\n            props.cb(\"item excluído\");\r\n          })\r\n      : console.log(\"Cancelado\");\r\n  };\r\n\r\n  const editWalletItem = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(`${baseURL}/api/wallet/`, {\r\n        pk: EditId,\r\n        stock_amount: Amount,\r\n        investment: Investment,\r\n      })\r\n      .then((resp) => {\r\n        alert(\"Item Editado com sucesso\");\r\n        console.log(resp);\r\n        props.cb(\"item editado\");\r\n      });\r\n  };\r\n\r\n  const submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(`${baseURL}/api/wallet/`, {\r\n        stock_amount: Amount,\r\n        symbol: Stock,\r\n        investment: Investment,\r\n        broker: Broker,\r\n        owner: props.owner,\r\n        buy_date: BuyDate,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        props.cb(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between mb-2\">\r\n        <h4 className=\"d-flex flex-column justify-content-center\">\r\n          Ativos na carteira\r\n        </h4>\r\n        <Fragment>\r\n          <MDBBtn onClick={toggleModalAdd} color=\"elegant\">\r\n            Adicionar Ativo\r\n          </MDBBtn>\r\n        </Fragment>\r\n      </div>\r\n      <Table className=\"text-dark\" size=\"sm\" striped responsive>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th></th>\r\n            <th>Corretora</th>\r\n            <th>Proprietário</th>\r\n            <th>Ativo</th>\r\n            <th>Preço de Compra</th>\r\n            <th>Quantidade</th>\r\n            <th>Investimento</th>\r\n            <th>Preço Atual</th>\r\n            <th>Patrimônio</th>\r\n            <th>Desempenho(%)</th>\r\n            <th>Desempenho(R$)</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((item, index, array) => {\r\n            let change_percent =\r\n              Math.round(\r\n                ((item.money_amount - item.investment) * 10000) /\r\n                  item.investment\r\n              ) / 100;\r\n            let colorClass = change_percent > 0 ? \"success\" : \"danger\";\r\n            return (\r\n              <tr\r\n                key={index}\r\n                className=\"text-center\"\r\n                // onClick={editWalletItem}\r\n              >\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={toggleModalEdit}\r\n                    id={item.pk}\r\n                    className=\"fas fa-edit align-middle\"\r\n                  ></i>\r\n                </td>\r\n                <td className=\"align-middle\">{item.broker}</td>\r\n                <td className=\"align-middle\">{item.owner}</td>\r\n                <td className=\"align-middle\">{`${item.stock.name} (${item.stock.symbol})`}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.buy_price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">{item.stock_amount}</td>\r\n                <td className=\"align-middle\">\r\n                  {item.investment.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.stock.price.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  {item.money_amount.toLocaleString(\"en-US\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span className={`badge-pill badge-${colorClass}`}>\r\n                    {change_percent} %\r\n                  </span>\r\n                </td>\r\n                <td className={`align-middle text-${colorClass}`}>\r\n                  {(item.money_amount - item.investment).toLocaleString(\r\n                    \"en-US\",\r\n                    {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    }\r\n                  )}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    id={item.pk}\r\n                    onClick={deleteWalletItem}\r\n                    className=\"align-middle fas fa-times\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* ADD MODAL */}\r\n\r\n      <MDBModal isOpen={ModalAdd} toggle={toggleModalAdd}>\r\n        <MDBModalHeader toggle={toggleModalAdd}>\r\n          Custódia de Ações\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={submitWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Ativo Comprado\"\r\n                      icon=\"\"\r\n                      group\r\n                      style={{ fontSize: \"20px\" }}\r\n                      type=\"text\"\r\n                      onChange={handleStockChange}\r\n                    />\r\n                    <div className=\"md-form\">\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"transaction-date\"\r\n                        className=\"form-control\"\r\n                        id=\"transaction-date\"\r\n                        onChange={(e) => setBuyDate(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        custom\r\n                        defaultValue=\"\"\r\n                        onChange={handleBrokerChange}\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Corretora da Operação\r\n                        </option>\r\n                        <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                        <option value=\"Banco do Brasil\">Banco do Brasil</option>\r\n                        <option value=\"Itaú\">Itaú</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\" onClick={toggleModalAdd}>\r\n                      Adicionar\r\n                    </MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalAdd}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n\r\n      {/* EDIT MODAL */}\r\n      <MDBModal isOpen={ModalEdit} toggle={toggleModalEdit}>\r\n        <MDBModalHeader id=\"editModalHeader\" toggle={toggleModalEdit}>\r\n          Editando item da carteira\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <MDBContainer>\r\n            <MDBRow className=\"d-flex justify-content-center\">\r\n              <MDBCol md=\"6\">\r\n                <form onSubmit={editWalletItem}>\r\n                  <div className=\"grey-text\">\r\n                    <MDBInput\r\n                      label=\"Quantidade de Ações\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      error=\"wrong\"\r\n                      success=\"right\"\r\n                      onChange={handleStockAmountChange}\r\n                    />\r\n                    <MDBInput\r\n                      label=\"Capital Investido\"\r\n                      icon=\"\"\r\n                      style={{ fontSize: \"20px\" }}\r\n                      group\r\n                      type=\"text\"\r\n                      onChange={handleInvestmentChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn type=\"submit\">Confirmar Edição</MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn\r\n            type=\"button\"\r\n            color=\"outline-elegant\"\r\n            onClick={toggleModalEdit}\r\n          >\r\n            Fechar\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletTable;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBBadge,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass TransactionsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Broker: \"\",\r\n      Operation: \"\",\r\n      Stock: \"\",\r\n      Date: \"\",\r\n      Document: \"\",\r\n      Data: \"\",\r\n      ModalAdd: false,\r\n    };\r\n    this.submitTransactionItem = this.submitTransactionItem.bind(this);\r\n    this.deleteTransactionItem = this.deleteTransactionItem.bind(this);\r\n  }\r\n  deleteTransactionItem = (e) => {\r\n    var id = parseInt(e.target.getAttribute(\"id\"));\r\n    if (!window.confirm(\"Deseja mesmo excluir essa transação?\")) {\r\n      return 0;\r\n    }\r\n    axios\r\n      .delete(`${baseURL}/api/transaction/`, {\r\n        params: {\r\n          pk: id,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        this.props.cb(\"item deletado\");\r\n      });\r\n  };\r\n  submitTransactionItem = (e) => {\r\n    e.preventDefault();\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"broker\", this.state.Broker);\r\n    uploadData.append(\"operation\", this.state.Operation);\r\n    uploadData.append(\"date\", this.state.Date);\r\n    uploadData.append(\"document\", this.state.Document);\r\n    uploadData.append(\"stock\", this.state.Stock.toUpperCase());\r\n    uploadData.append(\"owner\", this.props.owner);\r\n\r\n    axios\r\n      .post(`${baseURL}/api/transaction/`, uploadData)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        this.props.cb(\"item adicionado\");\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${baseURL}/api/transaction/`, {\r\n        params: {\r\n          owner: this.props.owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          Data: data,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const content =\r\n      this.state.Data.length === 0 ? (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      ) : (\r\n        this.state.Data.map((item, index) => {\r\n          let colorClass =\r\n            item.operation === \"Compra\"\r\n              ? \"default\"\r\n              : item.operation === \"Venda\"\r\n              ? \"secondary\"\r\n              : \"primary\";\r\n          return (\r\n            <tr key={index}>\r\n              <td className=\"text-center align-middle\">{item.date}</td>\r\n              <td className=\"text-center align-middle\">{item.broker}</td>\r\n              <td className=\"text-center align-middle\">\r\n                <MDBBadge color={colorClass}>\r\n                  <span style={{ fontWeight: \"normal\", fontSize: \"14.4px\" }}>\r\n                    {item.operation}\r\n                  </span>\r\n                </MDBBadge>\r\n              </td>\r\n              <td className=\"text-center align-middle\">{item.stock}</td>\r\n              <td className=\"text-center align-middle\">\r\n                <a href={`${baseURL}${item.document}`} download>\r\n                  <i className=\"text-center align-middle fas fa-file-download fa-2x\"></i>\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <i\r\n                  id={item.pk}\r\n                  onClick={this.deleteTransactionItem}\r\n                  className=\"fas fa-times fa-2x\"\r\n                ></i>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between mb-2\">\r\n          <h4 className=\"d-flex flex-column justify-content-center\">\r\n            Ativos na carteira\r\n          </h4>\r\n          <Fragment>\r\n            <MDBBtn\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n              color=\"elegant\"\r\n            >\r\n              Adicionar Ativo\r\n            </MDBBtn>\r\n          </Fragment>\r\n        </div>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">Data</th>\r\n              <th className=\"text-center\">Corretora</th>\r\n              <th className=\"text-center\">Operação</th>\r\n              <th className=\"text-center\">Ativo</th>\r\n              <th className=\"text-center\">Nota de Corretagem</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{content}</tbody>\r\n        </Table>\r\n        <MDBModal\r\n          isOpen={this.state.ModalAdd}\r\n          toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n          >\r\n            Custódia de Ações\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <MDBContainer>\r\n              <MDBRow className=\"d-flex justify-content-center\">\r\n                <MDBCol md=\"6\">\r\n                  <form\r\n                    encType=\"multipart/form-data\"\r\n                    onSubmit={this.submitTransactionItem}\r\n                  >\r\n                    <div className=\"grey-text\">\r\n                      <MDBInput\r\n                        label=\"Ativo Comprado\"\r\n                        icon=\"\"\r\n                        group\r\n                        style={{ fontSize: \"20px\" }}\r\n                        type=\"text\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Stock: e.target.value.toUpperCase() })\r\n                        }\r\n                      />\r\n                      <div className=\"md-form\">\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"transaction-date\"\r\n                          className=\"form-control\"\r\n                          id=\"transaction-date\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Date: e.target.value })\r\n                          }\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Broker: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Corretora da Operação\r\n                          </option>\r\n                          <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                          <option value=\"Banco do Brasil\">\r\n                            Banco do Brasil\r\n                          </option>\r\n                          <option value=\"Itaú\">Itaú</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          custom\r\n                          defaultValue=\"\"\r\n                          onChange={(e) =>\r\n                            this.setState({ Operation: e.target.value })\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Operação\r\n                          </option>\r\n                          <option value=\"Compra\">Compra</option>\r\n                          <option value=\"Venda\">Venda</option>\r\n                          <option value=\"Compra e Venda\">Compra e Venda</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.File\r\n                        id=\"custom-file\"\r\n                        label=\"Nota de Corretagem\"\r\n                        onChange={(e) =>\r\n                          this.setState({ Document: e.target.files[0] })\r\n                        }\r\n                        custom\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <MDBBtn\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                          this.setState({ ModalAdd: !this.state.ModalAdd })\r\n                        }\r\n                      >\r\n                        Adicionar\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </form>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              type=\"button\"\r\n              color=\"outline-elegant\"\r\n              onClick={() => this.setState({ ModalAdd: !this.state.ModalAdd })}\r\n            >\r\n              Fechar\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionsTable;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletAllocationChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"donut\",\r\n          height: \"250px\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    let amount = parseFloat(val).toLocaleString(\"en-US\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    });\r\n                    return `${amount}`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          \"#E91E63\",\r\n          \"#FF9800\",\r\n          \"#00B746\",\r\n          \"#EF403C\",\r\n          \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser = [];\r\n    this.props.data.forEach((item) => {\r\n      ser.push(item.money_amount);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: ser,\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"donut\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletAllocationChart;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass WalletYield extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"bar\",\r\n          height: 250,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            dataLabels: {\r\n              position: \"top\",\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          offsetX: -6,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n            colors: [\"#fff\"],\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 1,\r\n          colors: [\"#fff\"],\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Comparativo - Ibovespa/Carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var lab = [];\r\n    var ser1 = [];\r\n    var ser2 = [];\r\n    this.props.data.forEach((item) => {\r\n      ser1.push(item.change_percent);\r\n      ser2.push(item.ibovespa_change);\r\n      lab.push(item.stock.symbol);\r\n    });\r\n    this.setState({\r\n      series: [\r\n        { name: \"Rendimento\", data: ser1 },\r\n        { name: \"Ibovespa\", data: ser2 },\r\n      ],\r\n      options: {\r\n        labels: lab,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"bar\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletYield;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  Spinner,\r\n  Container,\r\n  Form,\r\n  Col,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport WalletTable from \"./WalletTable\";\r\nimport TransactionsTable from \"./TransactionsTable\";\r\nimport WalletAllocationChart from \"./WalletAllocationChart\";\r\nimport WalletYield from \"./WalletYield\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n// import { MDBBtn } from \"mdbreact\";\r\n\r\nclass WalletComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Loading: false,\r\n      Wallet: [],\r\n      Owner: \"\",\r\n      TotalAmount: 0,\r\n      TotalInvestment: 0,\r\n      TotalChangePct: 0,\r\n      MaxStockChange: {},\r\n      MinStockChange: {},\r\n      noData: false,\r\n      stockAmout: 0,\r\n      investment: 0,\r\n      stock: \"\",\r\n      broker: \"\",\r\n      buy_date: \"\",\r\n      updateRun: true,\r\n      stockData: [],\r\n    };\r\n\r\n    this.handleOwnerChange = this.handleOwnerChange.bind(this);\r\n    this.walletChangeCallback = this.walletChangeCallback.bind(this);\r\n    this.submitWalletItem = this.submitWalletItem.bind(this);\r\n  }\r\n\r\n  // var total_money_amount = 0;\r\n  // var total_investment = 0;\r\n  // var total_change_pct = 0;\r\n  // const [Loading, setLoading] = useState(false);\r\n  // const [Wallet, setWallet] = useState([]);\r\n  // const [Owner, setOwner] = useState(\"\");\r\n\r\n  handleOwnerChange = (e) => {\r\n    this.setState({\r\n      Owner: e.target.value,\r\n    });\r\n    // console.log(this.state.Owner);\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(`${baseURL}/api/wallet/`, {\r\n        params: {\r\n          owner: e.target.value,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        // console.log(data);\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  walletChangeCallback = (msg) => {\r\n    this.setState({\r\n      Loading: true,\r\n    });\r\n    axios\r\n      .get(`${baseURL}/api/wallet/`, {\r\n        params: {\r\n          owner: this.state.Owner,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        //calculating higher\r\n        var higher = Math.max.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object = data.find(function (o) {\r\n          return o.change_percent === higher;\r\n        });\r\n\r\n        // ... and min\r\n        var min = Math.min.apply(\r\n          Math,\r\n          data.map(function (obj) {\r\n            return obj.change_percent;\r\n          })\r\n        );\r\n        var object2 = data.find(function (o) {\r\n          return o.change_percent === min;\r\n        });\r\n\r\n        //calculating totals\r\n        let amount = data.reduce((sum, currentValue) => {\r\n          return currentValue.money_amount + sum;\r\n        }, 0);\r\n        let investment = data.reduce((sum, currentValue) => {\r\n          return currentValue.investment + sum;\r\n        }, 0);\r\n        let change =\r\n          Math.round((10000 * (amount - investment)) / investment, 2) / 100;\r\n\r\n        // setting states\r\n        this.setState({\r\n          Wallet: data,\r\n          TotalAmount: amount,\r\n          TotalInvestment: investment,\r\n          TotalChangePct: change,\r\n          MaxStockChange: object,\r\n          MinStockChange: object2,\r\n        });\r\n        return data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            Loading: false,\r\n            noData: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  submitWalletItem = (e) => {\r\n    e.preventDefault();\r\n    // console.log(Stock, Amount, Investment, Broker, props.owner);\r\n    axios\r\n      .post(`${baseURL}/api/wallet/`, {\r\n        stock_amount: this.state.stockAmount,\r\n        symbol: this.state.stock,\r\n        investment: this.state.investment,\r\n        broker: this.state.broker,\r\n        owner: this.state.Owner,\r\n        buy_date: this.state.buy_date,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === 201) {\r\n          alert(\"Ação adicionada ao sua carteira\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.walletChangeCallback(\"item adicionado\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.updateRun) {\r\n      axios\r\n        .get(`${baseURL}/api/wallet/stocks/${this.state.Owner}`)\r\n        .then((resp) => resp.data)\r\n        .then((data) => {\r\n          this.setState({\r\n            stockData: data,\r\n          });\r\n        });\r\n      this.setState({\r\n        updateRun: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const spinner = (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n\r\n    const noDataContent = (\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-center mt-2\">\r\n          <Card style={{ width: \"65%\" }} bg=\"dark\" text=\"light\">\r\n            <Card.Header>\r\n              <h3 className=\"d-flex justify-content-center\">\r\n                Ops, parece que não há itens nesta carteira, adicione seu\r\n                primeiro item abaixo!\r\n              </h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <MDBContainer>\r\n                <MDBRow className=\"d-flex justify-content-center\">\r\n                  <MDBCol md=\"6\">\r\n                    <form onSubmit={this.submitWalletItem}>\r\n                      <div className=\"grey-text\">\r\n                        <MDBInput\r\n                          label=\"Ativo Comprado\"\r\n                          icon=\"\"\r\n                          group\r\n                          style={{ fontSize: \"20px\" }}\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              stock: e.target.value.toUpperCase(),\r\n                            });\r\n                          }}\r\n                        />\r\n                        <div className=\"md-form\">\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"transaction-date\"\r\n                            className=\"form-control\"\r\n                            id=\"transaction-date\"\r\n                            onChange={(e) =>\r\n                              this.setState({ buy_date: e.target.value })\r\n                            }\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <MDBInput\r\n                          label=\"Quantidade de Ações\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                          onChange={(e) => {\r\n                            this.setState({ stockAmount: e.target.value });\r\n                          }}\r\n                        />\r\n                        <MDBInput\r\n                          label=\"Capital Investido\"\r\n                          icon=\"\"\r\n                          style={{ fontSize: \"20px\" }}\r\n                          group\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            this.setState({ investment: e.target.value });\r\n                          }}\r\n                        />\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            defaultValue=\"\"\r\n                            onChange={(e) => {\r\n                              this.setState({ broker: e.target.value });\r\n                            }}\r\n                          >\r\n                            <option value=\"\" disabled>\r\n                              Corretora da Operação\r\n                            </option>\r\n                            <option value=\"Ágora - Bradesco\">Ágora</option>\r\n                            <option value=\"Banco do Brasil\">\r\n                              Banco do Brasil\r\n                            </option>\r\n                            <option value=\"Itaú\">Itaú</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <MDBBtn type=\"submit\">Enviar</MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBContainer>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    const variant = \"dark\";\r\n    const { Owner } = this.state;\r\n    const { noData } = this.state;\r\n    const { Loading } = this.state;\r\n    const notChosen = Owner === \"\";\r\n\r\n    return Owner === \"\" ? (\r\n      <>\r\n        <Container>\r\n          <Row className=\"d-flex justify-content-center mt-2\">\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n              style={{ width: \"65%\" }}\r\n              className=\"mb-2\"\r\n            >\r\n              <Card.Header>\r\n                <h3 className=\"d-flex justify-content-center\">\r\n                  Selecionar Carteira\r\n                </h3>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n                <Form>\r\n                  <Form.Group controlId=\"formOwnerSelect\">\r\n                    <Form.Label>Proprietário</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      custom\r\n                      onChange={this.handleOwnerChange}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Selecionar Carteira a ser mostrada\r\n                      </option>\r\n                      <option value=\"Ricardo\">Ricardo</option>\r\n                      <option value=\"Itala\">Itala</option>\r\n                      <option value=\"Caco\">Caco</option>\r\n                      <option value=\"Thayssa\">Thayssa</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  {/* <Form.Group controlId=\"formSubmitBtn\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <MDBBtn type=\"submit\" color=\"elegant\">\r\n                        Ver Carteira\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </Form.Group> */}\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    ) : notChosen ? (\r\n      <div></div>\r\n    ) : Loading ? (\r\n      spinner\r\n    ) : noData ? (\r\n      noDataContent\r\n    ) : (\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"data-table\">\r\n        <Container fluid className=\"p-4\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                    <Card.Body>\r\n                      <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"highlights\"\r\n                          >\r\n                            Destaques\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"data-table\"\r\n                          >\r\n                            Itens da Carteira\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                          <Nav.Link\r\n                            style={{ color: \"black\", fontSize: \"16px\" }}\r\n                            eventKey=\"transactions\"\r\n                          >\r\n                            Transações\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12}>\r\n                  {this.state.stockData.length < 0 ? (\r\n                    spinner\r\n                  ) : (\r\n                    <Card bg=\"light\" text=\"dark\" className=\"mb-3\">\r\n                      <Card.Body>\r\n                        {this.state.stockData.map((item, index) => {\r\n                          let colorClass =\r\n                            item.change_percent > 0 ? \"success\" : \"danger\";\r\n                          return (\r\n                            <div key={index} className=\"mb-2\">\r\n                              <div className=\"d-flex w-100 justify-content-between\">\r\n                                <h5 className=\"mb-1\">{item.symbol}</h5>\r\n                                <p className=\"mb-1\">\r\n                                  R$ {item.price.toFixed(2)}\r\n                                  <span\r\n                                    className={`badge badge-${colorClass} ml-1 badge-pill`}\r\n                                  >\r\n                                    {item.change_percent.toFixed(2)} %\r\n                                  </span>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"d-flex w-100 justify-content-between\">\r\n                                <p className=\"mb-1\">\r\n                                  <small className=\"text-muted\">\r\n                                    {item.name}\r\n                                  </small>\r\n                                </p>\r\n                                <p className=\"mb-1\">\r\n                                  <small className=\"text-muted\">\r\n                                    <a\r\n                                      href={`/stock/${item.pk}`}\r\n                                      className=\"text-muted\"\r\n                                    >\r\n                                      Gráfico\r\n                                      <i className=\"align-center ml-1 fas fa-external-link-alt fa-sm\"></i>\r\n                                    </a>\r\n                                  </small>\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Card className=\"mb-3\" bg=\"light\" text=\"dark\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"highlights\">\r\n                    <Row className=\"m-4\">\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Patrimônio\"\r\n                          description=\"Capital Investido: \"\r\n                          descriptionValue={this.state.TotalInvestment.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          value={this.state.TotalAmount.toLocaleString(\r\n                            \"en-US\",\r\n                            {\r\n                              style: \"currency\",\r\n                              currency: \"BRL\",\r\n                            }\r\n                          )}\r\n                          percentage={`${this.state.TotalChangePct} %`}\r\n                          percentageValue={this.state.TotalChangePct}\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Lucro\"\r\n                          description={this.state.MaxStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MaxStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MaxStockChange.money_amount -\r\n                          this.state.MaxStockChange.investment) /\r\n                          this.state.MaxStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MaxStockChange.money_amount -\r\n                                  this.state.MaxStockChange.investment) /\r\n                                  this.state.MaxStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                      <Col lg={4} xs={12}>\r\n                        <InfoCard\r\n                          title=\"Maior Prejuízo\"\r\n                          description={this.state.MinStockChange.stock.name.substr(\r\n                            0,\r\n                            18\r\n                          )}\r\n                          descriptionValue={`(${this.state.MinStockChange.stock.symbol})`}\r\n                          value={(\r\n                            Math.round(\r\n                              100 *\r\n                                (this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          ).toLocaleString(\"en-US\", {\r\n                            style: \"currency\",\r\n                            currency: \"BRL\",\r\n                          })}\r\n                          percentage={`\r\n                  ${\r\n                    Math.round(\r\n                      10000 *\r\n                        ((this.state.MinStockChange.money_amount -\r\n                          this.state.MinStockChange.investment) /\r\n                          this.state.MinStockChange.investment),\r\n                      2\r\n                    ) / 100\r\n                  } %`}\r\n                          percentageValue={\r\n                            Math.round(\r\n                              10000 *\r\n                                ((this.state.MinStockChange.money_amount -\r\n                                  this.state.MinStockChange.investment) /\r\n                                  this.state.MinStockChange.investment),\r\n                              2\r\n                            ) / 100\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col sm={12} lg={5}>\r\n                        <WalletAllocationChart\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12} lg={7}>\r\n                        <WalletYield\r\n                          owner={this.state.Owner}\r\n                          data={this.state.Wallet}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"data-table\">\r\n                    <Col lg={12} xs={12}>\r\n                      <WalletTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"transactions\">\r\n                    <Col lg={12} xs={12}>\r\n                      <TransactionsTable\r\n                        cb={this.walletChangeCallback}\r\n                        owner={this.state.Owner}\r\n                        data={this.state.Wallet}\r\n                      />\r\n                    </Col>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Tab.Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletComponent;\r\n","import React from \"react\";\r\nimport { Table, Row, Col, Card, Container, Spinner } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass StockDetailComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Indicators: undefined,\r\n      Dataset2: [],\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`${baseURL}/api/stock/get/${this.props.match.params.id}`)\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = data.name;\r\n        indicators = data.indicator;\r\n        if (indicators !== []) {\r\n          indicators.momentum.forEach((item) => {\r\n            if (item.indicator !== \"Highs/Lows(14)\") {\r\n              if (item.signal === \"buy\") {\r\n                buy = buy + 1;\r\n              } else if (item.signal === \"sell\") {\r\n                sell = sell + 1;\r\n              } else {\r\n                neutral = neutral + 1;\r\n              }\r\n            }\r\n          });\r\n          if (indicators.ema_signal === \"buy\") {\r\n            buy = buy + 1;\r\n          } else if (indicators.ema_signal === \"sell\") {\r\n            sell = sell + 1;\r\n          } else {\r\n            neutral = neutral + 1;\r\n          }\r\n        } else {\r\n          indicators = [];\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col lg={6} sm={12}>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col lg={6} sm={12}>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators === [] ? (\r\n                    <tr> Sem dados de indicadores </tr>\r\n                  ) : (\r\n                    this.state.Indicators.resistances.map((value, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>Resistencia {index + 1}</td>\r\n                          <td>R$ {value}</td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                  {this.state.Indicators === [] ? (\r\n                    <tr> Sem dados de indicadores </tr>\r\n                  ) : (\r\n                    this.state.Indicators.supports.map((value, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>Suportes {index + 1}</td>\r\n                          <td>R$ {value}</td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12} className=\"mb-4\">\r\n            <Row>\r\n              <Col sm={12}>\r\n                <Card bg=\"light\" id=\"chart\">\r\n                  <ReactApexChart\r\n                    options={this.state.Options}\r\n                    series={this.state.Series}\r\n                    type=\"candlestick\"\r\n                    height=\"500\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mt-4\" xs={12}>\r\n                <Card bg=\"light\">\r\n                  <Card.Header>Indicadores</Card.Header>\r\n                  {content}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Table>\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th style={{ width: \"20%\" }}>Ativo</th>\r\n                    <th style={{ width: \"20%\" }}>Preço</th>\r\n                    <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Dataset.map((item, index) => {\r\n                    let colorClass =\r\n                      item.change_percent > 0 ? \"success\" : \"danger\";\r\n                    return (\r\n                      <tr key={index} className=\"text-center\">\r\n                        <td>{item.date}</td>\r\n                        <td>R$ {item.close}</td>\r\n                        <td className={`text-${colorClass}`}>\r\n                          {item.change_percent}%\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockDetailComponent;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Card, Container, Row, Form, Button } from \"react-bootstrap/\";\r\nimport axios from \"axios\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nconst AddStockComponent = () => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [isETF, setETF] = useState(false);\r\n  const [isFund, setFund] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`${baseURL}/api/stock/`, {\r\n        symbol: symbol.toUpperCase(),\r\n        is_etf: isETF,\r\n        is_fund: isFund,\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        resp.status === 201\r\n          ? alert(\r\n              `${resp.data.name}(${resp.data.symbol}) adicionado ao portfólio`\r\n            )\r\n          : alert(\"Ops, algum erro ocorreu\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(symbol);\r\n    // console.log(isETF);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  // cuida do textinput\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e.target.value);\r\n    // console.log(symbol);\r\n  };\r\n\r\n  // cuida da checkbox ETF\r\n  const handleETFChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setETF(!isETF);\r\n    // console.log(isETF);\r\n  };\r\n\r\n  // cuida da checkbox FUND\r\n  const handleFundChange = (e) => {\r\n    // atualiza o stateHook para o contrário do seu valor anterior\r\n    setFund(!isFund);\r\n    // console.log(isFund);\r\n  };\r\n\r\n  const variant = \"dark\";\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-3\">\r\n        <Card\r\n          bg={variant.toLowerCase()}\r\n          text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n          style={{ width: \"65%\" }}\r\n          className=\"mb-2\"\r\n        >\r\n          <Card.Header>\r\n            <h3 className=\"d-flex justify-content-center \">Adicionar Ação</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>{variant} Card Title </Card.Title> */}\r\n            <Form onSubmit={handleSubmit}>\r\n              <MDBInput\r\n                label=\"Insira a sigla da ação que deseja adicionar ao seu portfolio\"\r\n                icon=\"\"\r\n                group\r\n                style={{ fontSize: \"20px\", color: \"white\" }}\r\n                type=\"text\"\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                onChange={handleSymbolChange}\r\n              />\r\n              <Form.Group controlId=\"etfCheckBox\">\r\n                <Col className=\"\">\r\n                  <Form.Check\r\n                    checked={isETF}\r\n                    onChange={handleETFChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"ETF\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"fundCheckBox\">\r\n                <Col>\r\n                  <Form.Check\r\n                    checked={isFund}\r\n                    onChange={handleFundChange}\r\n                    type=\"checkbox\"\r\n                    className=\"\"\r\n                    label=\"Fundo Imobiliário\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Adicionar\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddStockComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Table,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass QueryComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      symbol: \"\",\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n      loadedContent: false,\r\n      loadingContent: false,\r\n      Options2: {\r\n        labels: [\"Compra\", \"Neutro\", \"Venda\"],\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        animations: {\r\n          enabled: true,\r\n          easing: \"easeinout\",\r\n          speed: 800,\r\n          animateGradually: {\r\n            enabled: true,\r\n            delay: 150,\r\n          },\r\n          dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350,\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Distribuição da carteira\",\r\n          align: \"center\",\r\n          style: {\r\n            fontFamily: \"Oswald\",\r\n            fontSize: \"22px\",\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: true,\r\n                  fontFamily: \"Oswald\",\r\n                  fontSize: \"26px\",\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: \"26px\",\r\n                  fontFamily: \"Oswald\",\r\n                  formatter: function (val) {\r\n                    return `${val} indicadores`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          position: \"bottom\",\r\n        },\r\n        colors: [\r\n          \"#2E93fA\",\r\n          \"#66DA26\",\r\n          \"#546E7A\",\r\n          // \"#E91E63\",\r\n          // \"#FF9800\",\r\n          // \"#00B746\",\r\n          // \"#EF403C\",\r\n          // \"#3D3D3D\",\r\n        ],\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return Math.round(val * 100, 2) / 100 + \"%\";\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              chart: {\r\n                height: 400,\r\n              },\r\n              yaxis: {\r\n                show: false,\r\n              },\r\n              xaxis: {\r\n                labels: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSymbolChange = this.handleSymbolChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleSymbolChange(e) {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      symbol: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({ loadingContent: true });\r\n    e.preventDefault();\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    let name;\r\n    let indicators;\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let neutral = 0;\r\n    axios\r\n      .get(`${baseURL}/api/query/`, {\r\n        params: {\r\n          symbol: this.state.symbol,\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        name = this.state.symbol.toLocaleUpperCase();\r\n        indicators = data.indicator;\r\n        indicators.momentum.forEach((item) => {\r\n          if (item.indicator !== \"Highs/Lows(14)\") {\r\n            if (item.signal === \"buy\") {\r\n              buy = buy + 1;\r\n            } else if (item.signal === \"sell\") {\r\n              sell = sell + 1;\r\n            } else {\r\n              neutral = neutral + 1;\r\n            }\r\n          }\r\n        });\r\n        if (indicators.ema_signal === \"buy\") {\r\n          buy = buy + 1;\r\n        } else if (indicators.ema_signal === \"sell\") {\r\n          sell = sell + 1;\r\n        } else {\r\n          neutral = neutral + 1;\r\n        }\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        console.log(series);\r\n        this.setState({\r\n          Dataset2: [buy, neutral, sell],\r\n          Indicators: indicators,\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            title: {\r\n              text: name,\r\n              align: \"left\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n            responsive: [\r\n              {\r\n                breakpoint: 1000,\r\n                options: {\r\n                  chart: {\r\n                    height: 400,\r\n                  },\r\n                  yaxis: {\r\n                    show: true,\r\n                  },\r\n                  xaxis: {\r\n                    labels: {\r\n                      show: false,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          loadedContent: true,\r\n          loadingContent: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const content2 =\r\n      this.state.Indicators === undefined ? (\r\n        <div className=\"d-flex justiy-content-center\">\r\n          <Spinner></Spinner>\r\n        </div>\r\n      ) : (\r\n        <Card.Body>\r\n          <Row>\r\n            <Col lg={6} sm={12}>\r\n              <ReactApexChart\r\n                options={this.state.Options2}\r\n                series={this.state.Dataset2}\r\n                type=\"donut\"\r\n                height=\"500\"\r\n              />\r\n            </Col>\r\n            <Col lg={6} sm={12}>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-center\" style={{ fontSize: \"18px\" }}>\r\n                      <strong>Limite</strong>\r\n                    </th>\r\n                    <th className=\"text-center\" style={{ fontSize: \"18px\" }}>\r\n                      <strong>Valor</strong>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.Indicators.resistances.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">Resistencia {index + 1}</td>\r\n                        <td className=\"text-center\">R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {this.state.Indicators.supports.map((value, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">Suportes {index + 1}</td>\r\n                        <td className=\"text-center\">R$ {value}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      );\r\n    const spinner = (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n    const content = (\r\n      <Row className=\"\">\r\n        <Col xl={8} lg={9} sm={12}>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Card id=\"chart\" bg=\"light\" className=\"mb-2\">\r\n                <ReactApexChart\r\n                  options={this.state.Options}\r\n                  series={this.state.Series}\r\n                  type=\"candlestick\"\r\n                  height=\"500\"\r\n                  className=\"\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"mt-2\" xs={12}>\r\n              <Card bg=\"light\">\r\n                <Card.Header>Indicadores</Card.Header>\r\n                {content2}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"mt-2\" xl={4} lg={3} sm={12}>\r\n          <Card bg=\"light\">\r\n            <Table striped>\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th style={{ width: \"20%\" }}>Ativo</th>\r\n                  <th style={{ width: \"20%\" }}>Preço</th>\r\n                  <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.Dataset.map((item, index) => {\r\n                  let colorClass =\r\n                    item.change_percent > 0 ? \"success\" : \"danger\";\r\n                  return (\r\n                    <tr key={index} className=\"text-center\">\r\n                      <td>{item.date}</td>\r\n                      <td>R$ {item.close}</td>\r\n                      <td className={`text-${colorClass}`}>\r\n                        {item.change_percent}%\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n    const variant = \"dark\";\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center mt-3\">\r\n          <Card\r\n            bg={variant.toLowerCase()}\r\n            text={variant.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n            style={{ width: \"65%\" }}\r\n            className=\"mb-2\"\r\n          >\r\n            <Card.Header>\r\n              <h3 className=\"d-flex justify-content-center\">Procurar</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group controlId=\"symbol\">\r\n                  <MDBInput\r\n                    label=\"Insira a sigla da ação a ser visualizada aqui\"\r\n                    icon=\"\"\r\n                    style={{ fontSize: \"20px\", color: \"white\" }}\r\n                    group\r\n                    type=\"text\"\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                    onChange={this.handleSymbolChange}\r\n                  />\r\n                </Form.Group>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Adicionar\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n        {this.state.loadedContent ? (\r\n          content\r\n        ) : this.state.loadingContent ? (\r\n          <div className=\"d-flex justify-content-center\">{spinner}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryComponent;\r\n","import React from \"react\";\r\nimport { Row, Col, Table, Card, Container } from \"react-bootstrap\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../global/URL\";\r\n\r\nclass IbovespaComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Dataset: [],\r\n      Date: [],\r\n      Price: [],\r\n      Options: {},\r\n      Series: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataset = [];\r\n    let series = [];\r\n    let dates = [];\r\n    let closePrices = [];\r\n    // let name;\r\n    axios\r\n      .get(`${baseURL}/api/index/historical/`, {\r\n        params: {\r\n          name: \"Bovespa\",\r\n        },\r\n      })\r\n      .then((resp) => resp.data)\r\n      .then((data) => {\r\n        // name = data.name;\r\n        console.log(data);\r\n        data.data.historical.forEach((item, index, array) => {\r\n          dates.push(item.date);\r\n          closePrices.push(item.close);\r\n          let change_percent = 0;\r\n          if (index !== array.length - 1) {\r\n            change_percent =\r\n              Math.round(\r\n                (((item.close - array[index + 1].close) * 100) /\r\n                  array[index + 1].close) *\r\n                  100,\r\n                2\r\n              ) / 100;\r\n          }\r\n          series.unshift({\r\n            x: item.date,\r\n            y: [item.open, item.high, item.low, item.close],\r\n          });\r\n          dataset.push({\r\n            date: item.date,\r\n            close: item.close,\r\n            change_percent: change_percent,\r\n          });\r\n        });\r\n        // setLoadingProgress(90);\r\n        // setLoading(false);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          Dataset: dataset,\r\n          Date: dates,\r\n          Price: closePrices,\r\n          Series: [{ data: series }],\r\n          Options: {\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 550,\r\n            },\r\n            // title: {\r\n            //   text: \"Ibovespa\",\r\n            //   align: \"center\",\r\n            // },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"mt-4\">\r\n          <Col xl={8} lg={9} sm={12}>\r\n            <Card bg=\"light\" id=\"chart\" className=\"mb-4\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Gráfico histórico do índice Ibovespa\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ReactApexChart\r\n                  options={this.state.Options}\r\n                  series={this.state.Series}\r\n                  type=\"candlestick\"\r\n                  height=\"500\"\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xl={4} lg={3} sm={12}>\r\n            <Card bg=\"light\">\r\n              <Card.Header style={{ fontSize: \"20px\" }}>\r\n                Tabela com os valores do gráfico\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Table>\r\n                  <thead>\r\n                    <tr className=\"text-center\">\r\n                      <th style={{ width: \"20%\" }}>Ibovespa</th>\r\n                      <th style={{ width: \"20%\" }}>Índice</th>\r\n                      <th style={{ width: \"20%\" }}>Variação(%)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.Dataset.map((item, index) => {\r\n                      let colorClass =\r\n                        item.change_percent > 0 ? \"success\" : \"danger\";\r\n                      return (\r\n                        <tr key={index} className=\"text-center\">\r\n                          <td>{item.date}</td>\r\n                          <td>{item.close} Pts</td>\r\n                          <td className={`text-${colorClass}`}>\r\n                            {item.change_percent}%\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IbovespaComponent;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport TopBar from \"./global/Navbar\";\r\nimport DashboardComponent from \"./dashboard/Dashboard\";\r\nimport WalletComponent from \"./wallet/Wallet\";\r\n// import ForexComponent from \"./forex/ForexComponent\";\r\nimport StockDetailComponent from \"./stockdetail/StockDetailComponent\";\r\nimport AddStockComponent from \"./addstock/AddStockComponent\";\r\nimport QueryComponent from \"./query/QueryComponent\";\r\nimport IbovespaComponent from \"./bvsp/IbovespaComponent\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <TopBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={DashboardComponent} />\r\n          <Route exact path=\"/wallet\" component={WalletComponent} />\r\n\r\n          {/* <Route exact path=\"/forex\" component={ForexComponent} /> */}\r\n          <Route exact path=\"/stock/:id\" component={StockDetailComponent} />\r\n          <Route exact path=\"/addStock\" component={AddStockComponent} />\r\n          <Route exact path=\"/query\" component={QueryComponent} />\r\n          <Route exact path=\"/bvsp\" component={IbovespaComponent} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./App.js\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}